<Window x:Class="RegistryToolbox.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RegistryToolbox"
        xmlns:models="clr-namespace:RegistryToolbox.Models"
        xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        mc:Ignorable="d"
        Title="Registry Toolbox Version  1.1.2 " MinHeight="768" MinWidth="1024" Icon="Resources\registry.ico" Closing="Window_Closing" >

    <Grid  Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.1*"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="0.1*"/>
            <ColumnDefinition Width="11*"/>
            <ColumnDefinition Width="11*"/>
        </Grid.ColumnDefinitions>
        <Rectangle  HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Stretch="UniformToFill"  Grid.RowSpan="9" Grid.ColumnSpan="3">
            <Rectangle.Fill>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox"
                             StartPoint="0,0" EndPoint="0,1" ColorInterpolationMode="ScRgbLinearInterpolation">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FF0000AA" Offset="0.005"/>
                        <GradientStop Color="#0080ff" Offset="0.9"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>

        <Button x:Name="btnOpenReg" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1"  HorizontalContentAlignment="Left" Click="btnOpenReg_Click">

            <StackPanel Orientation="Horizontal" >
                <Image Source="Resources\registry.ico" Stretch="Uniform"/>
                <Viewbox VerticalAlignment="Stretch" >
                    <emoji:TextBlock FontWeight="Medium" Text="Load Registry"  UseLayoutRounding="False"  LineHeight="60" LineStackingStrategy="BlockLineHeight" />

                </Viewbox>
            </StackPanel>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Opacity" Value="0.7"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="BorderThickness" Value="5"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

        </Button>
        <Button x:Name="btnCMPReg" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="1"  HorizontalContentAlignment="Left" Click="btnCMPReg_Click">

            <StackPanel Orientation="Horizontal" >
                <Image Source="Resources\compare.ico" Stretch="Uniform"/>
                <Viewbox VerticalAlignment="Stretch" >
                    <emoji:TextBlock FontWeight="Medium" Text="Load 2 Hives"  UseLayoutRounding="False"  LineHeight="60" LineStackingStrategy="BlockLineHeight" TextAlignment="Center" HorizontalAlignment="Center" />
                </Viewbox>
            </StackPanel>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Opacity" Value="0.8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="BorderThickness" Value="4"/>
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

        </Button>
        <Button x:Name="btnExportReg" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="1" HorizontalContentAlignment="Left" Click="btnExportReg_Click" >

            <StackPanel Orientation="Horizontal" >
                <Image Source="Resources\export.ico" Stretch="Uniform"/>
                <Viewbox VerticalAlignment="Stretch" >
                    <emoji:TextBlock FontWeight="Medium" Text="Export to .Reg"  UseLayoutRounding="False"  LineHeight="60" LineStackingStrategy="BlockLineHeight" />
                </Viewbox>
            </StackPanel>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Opacity" Value="0.8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="BorderThickness" Value="4"/>
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

        </Button>
        <Button x:Name="btnCMPRegF" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" HorizontalContentAlignment="Left" Click="btnCMPRegF_Click" >

            <StackPanel Orientation="Horizontal" >
                <Image Source="Resources\file.png" Stretch="Uniform"/>
                <Viewbox VerticalAlignment="Stretch" >
                    <emoji:TextBlock FontWeight="Medium" Text="Compare .Reg Files"  UseLayoutRounding="False"  LineHeight="60" LineStackingStrategy="BlockLineHeight" />
                </Viewbox>
            </StackPanel>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Opacity" Value="0.8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="BorderThickness" Value="4"/>
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

        </Button>

        <Button x:Name="btnConfig" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="1" HorizontalContentAlignment="Left" Visibility="Hidden">

            <StackPanel Orientation="Horizontal" >
                <Image Source="Resources\engine.png" Stretch="Uniform"/>
                <Viewbox VerticalAlignment="Stretch" >
                    <emoji:TextBlock FontWeight="Medium" Text="Configuration"  UseLayoutRounding="False"  LineHeight="60" LineStackingStrategy="BlockLineHeight" />
                </Viewbox>
            </StackPanel>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Opacity" Value="0.8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="BorderThickness" Value="4"/>
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

        </Button>


        <Grid  Grid.Row="6" Grid.Column="1" Grid.RowSpan="2"  Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <Button x:Name="btnManual" Grid.Row="1" HorizontalContentAlignment="Left" Click="btnManual_Click" >
                <StackPanel Orientation="Horizontal" >
                    <Image Source="Resources\help.png" Stretch="Uniform"/>
                    <Viewbox VerticalAlignment="Stretch" >
                        <emoji:TextBlock FontWeight="Medium" Text="Manual"  UseLayoutRounding="False"  LineHeight="60" LineStackingStrategy="BlockLineHeight" />
                    </Viewbox>
                </StackPanel>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Opacity" Value="0.7"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="5"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="btnAbout"  Grid.Row="2"  HorizontalContentAlignment="Left" Click="btnAbout_Click" >

                <StackPanel Orientation="Horizontal" >
                    <Image Source="Resources\info.ico" Stretch="Uniform"/>
                    <Viewbox VerticalAlignment="Stretch" >
                        <emoji:TextBlock FontWeight="Medium" Text="About this"  UseLayoutRounding="False"  LineHeight="60" LineStackingStrategy="BlockLineHeight" />
                    </Viewbox>
                </StackPanel>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Opacity" Value="0.7"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="5"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

            </Button>
        </Grid>

        <StackPanel Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Center">
            <Viewbox>
                <emoji:TextBlock FontWeight="Bold" Text=" Made with ♥ from Costa Rica " HorizontalAlignment="Center"/>
            </Viewbox>
            <Viewbox  >
                <emoji:TextBlock FontWeight="Bold" Text="    gevivesh@microsoft.com    " HorizontalAlignment="Center"/>
            </Viewbox>
            <TextBlock>
            </TextBlock>
        </StackPanel>



        <Grid Margin="0,0,0,0"  Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>

            <Label Content="File Path"  Grid.Row="0" Grid.Column="0"></Label>
            <TextBox Name="txtfilepath1" Text="" Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" TextWrapping="Wrap"></TextBox>
            <Label Name="lblPath2" Content="File Path"  Grid.Row="0" Grid.Column="3"></Label>
            <TextBox Name="txtfilepath2" Text="" Grid.Row="0" Grid.Column="4" VerticalAlignment="Top" TextWrapping="Wrap"></TextBox>

            <Button Name="color1"  Grid.Row="1" Grid.Column="0" Click="color1_Click" >
                <Image Source="Resources/ink.png" Width="20" Height="20"/>
            </Button>
            <TextBox Name="txtTag1" Text="TAGS:" FontSize="16" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"></TextBox>
            <Button Name="color2"  Grid.Row="1" Grid.Column="3" Click="color2_Click" >
                <Image Source="Resources/ink.png" Width="20" Height="20"/>
            </Button>
            <TextBox Name="txtTag2" Text="TAGS:" FontSize="16" Grid.Row="1" Grid.Column="4" VerticalAlignment="Center"></TextBox>
        </Grid>





        <Grid x:Name="gridClientsContainer1"  Grid.Column="3" Grid.Row="1" Grid.RowSpan="6"  Margin="0,0,0,0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="10*" />
            </Grid.ColumnDefinitions>
          
            <TreeView Name="Reg1Tree" Grid.Column="0" FontSize="15" VirtualizingStackPanel.IsVirtualizing="False"  ItemsSource="{Binding Name}" SelectedItemChanged="Reg1Tree_SelectedItemChanged" KeyDown="Reg1Tree_KeyDown" >
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type models:ModelRegistryKey}" ItemsSource="{Binding Subkeys}" >
                        <TextBlock Text="{Binding Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="White" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Diff}" Value="False">
                                <Setter Property="Foreground" Value="Black"></Setter>
                                <Setter Property="FontWeight" Value="Normal" ></Setter>
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Diff}" Value="False" />
                                    <Condition  Binding='{Binding Path=IsChecked, ElementName=chk_showonlydiff}' Value='True' />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Path=Diff}" Value="True">
                                <Setter Property="Foreground" Value="Red"></Setter>
                                <Setter Property="FontWeight" Value="Bold" ></Setter>
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>


            <GridSplitter x:Name="uispliterA" Grid.Column="0" Width="5" 
            ShowsPreview="True"  ResizeDirection="Columns"
                          VerticalAlignment="Stretch" 
                          MouseLeave="GridSplitter_MouseLeave" 
                          ResizeBehavior="CurrentAndNext" 
                          MouseEnter="uispliter_MouseEnter" />

            <DataGrid  Grid.Column="1" Name="Reg1Values" ItemsSource="{Binding}"  IsReadOnly="True"  VirtualizingStackPanel.IsVirtualizing="False"  ScrollViewer.CanContentScroll="True" 
             FontSize="14" RowBackground="White" MouseDoubleClick="Reg1Values_MouseDoubleClick" >

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="White" />
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.ContextMenu>
                    <ContextMenu >
                        <MenuItem Command="Copy" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.CommandBindings>
                    <CommandBinding Command="Copy" CanExecute="CommandBinding_CanExecute"/>
                </DataGrid.CommandBindings>
            </DataGrid>

        </Grid>

        <GridSplitter x:Name="uispliter"  Grid.Row="1" Grid.Column="3" Grid.RowSpan="6" Width="6" Margin="1" Background="Black"
                      ShowsPreview="True"  MouseLeave="GridSplitter_MouseLeave"  MouseEnter="uispliter_MouseEnter" />

        <Grid x:Name="gridClientsContainer2"  Grid.Column="4" Grid.Row="1" Grid.RowSpan="6"  Margin="0,0,0,0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>


            <TreeView Name="Reg2Tree" Grid.Column="0" FontSize="15" VirtualizingStackPanel.IsVirtualizing="False" ItemsSource="{Binding Name}" KeyDown="Reg2Tree_KeyDown" SelectedItemChanged="Reg2Tree_SelectedItemChanged">
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type models:ModelRegistryKey}" ItemsSource="{Binding Subkeys}">
                        <TextBlock Text="{Binding Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Diff}" Value="False">
                                <Setter Property="Foreground" Value="Black"></Setter>
                                <Setter Property="FontWeight" Value="Normal" ></Setter>
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Diff}" Value="False" />
                                    <Condition  Binding='{Binding Path=IsChecked, ElementName=chk_showonlydiff}' Value='True' />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding Path=Diff}" Value="True">
                                <Setter Property="Foreground" Value="Red"></Setter>
                                <Setter Property="FontWeight" Value="Bold" ></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>

            </TreeView>

            <GridSplitter x:Name="uispliterB" Grid.Column="0" Width="5" 
            ShowsPreview="True"  ResizeDirection="Columns"
                          VerticalAlignment="Stretch" 
                          MouseLeave="GridSplitter_MouseLeave" 
                          ResizeBehavior="CurrentAndNext" 
                          MouseEnter="uispliter_MouseEnter" />

            <DataGrid Name="Reg2Values"  Grid.Column="1"  VirtualizingStackPanel.IsVirtualizing="False" ItemsSource="{Binding}" IsReadOnly="True"   ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible"
            ScrollViewer.HorizontalScrollBarVisibility="Auto" FontSize="14" RowBackground="White">
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="White" />
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="Copy" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.CommandBindings>
                    <CommandBinding Command="Copy" CanExecute="CommandBinding_CanExecute"/>
                </DataGrid.CommandBindings>
            </DataGrid>
        </Grid>


        <Grid Margin="10,0,0,0"  Grid.Row="7" Grid.Column="3" Grid.ColumnSpan="2" Grid.RowSpan="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <TextBox Name="txtpath1" Text="" Grid.Row="0" Grid.Column="0" BorderThickness="3" ></TextBox>

                <Button x:Name="goto1" Grid.Row="0" Grid.Column="1" Click="goto1_Click"  >
                    <Image Source="Resources/arrow.png" Width="20" Height="20"/>
                </Button>
                <TextBox Name="txtpath2"  Text="" Grid.Row="0" Grid.Column="3" BorderThickness="3" ></TextBox>
                <Button x:Name="goto2"  Grid.Row="0" Grid.Column="4" Click="goto2_Click"  >
                    <Image Source="Resources/arrow.png" Width="20" Height="20"/>
                </Button>
            </Grid>
            <Button x:Name="Insights" Content="Insights" Grid.Row="2" Grid.Column="0" Click="Insights_Click" Visibility="Hidden"></Button>
            <Button Name="btnalign" Content="Match Path" Grid.Row="1" Grid.Column="1" Click="btnalign_Click" />
            <Button Name="btnCompareKeyandsub" Content="Compare Keys" Grid.Row="2" Grid.Column="1" Click="btnCompareKeyandsub_Click" />
            <CheckBox  Grid.Row="3" Grid.Column="0" Name="chk_showonlydiff" Content="Display Only differences" Visibility="Hidden" FontWeight="Bold" FontSize="14" Checked="chk_showonlydiff_Checked" />
            <Grid  Grid.Row="3" Grid.Column="0"  Grid.ColumnSpan="3"  />
        </Grid>
    </Grid>

</Window>
